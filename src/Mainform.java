import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nupur
 */
public class Mainform extends javax.swing.JFrame{

    

    /**
     * Creates new form Mainform
     */
   
    public Mainform() {
        initComponents();
        
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ResultTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        locationselection = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        budgetselection = new javax.swing.JComboBox<>();
        propertyselection = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search Houses at MumbaiHomes");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        ResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(ResultTable);

        jButton1.setBackground(new java.awt.Color(51, 204, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Start Searching for houses");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 204, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Clear Searching Criterias");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Search Results will be displayed below:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Start Selecting your specifications:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Select Property Location:");

        locationselection.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        locationselection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select from the dropdown", "Mumbai", "Navi Mumbai", "Thane", "South Bombay", " " }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Select Property Type:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Select Budget Range:");

        budgetselection.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        budgetselection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select from the dropdown", "20L - 50L", "51L - 80L", "81L - 1.2Cr", "1.3Cr - 1.6Cr", "1.7Cr - 2Cr", "2.1Cr - 2.4Cr", "2.5Cr - 2.8Cr", "2.9Cr - 3.2Cr", "3.3Cr - 3.6Cr", "3.7Cr - 4Cr", "4.1Cr - 4.4Cr", "4.5Cr - 4.8Cr", "4.8Cr - 5Cr", " " }));
        budgetselection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgetselectionActionPerformed(evt);
            }
        });

        propertyselection.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        propertyselection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select from the dropdown", "Flats / Apartments", "Bungalows", "Plots" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(propertyselection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(budgetselection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationselection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(287, 287, 287))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(353, 353, 353))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(338, 338, 338))))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1047, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(311, 311, 311))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(budgetselection, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(propertyselection, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationselection, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void budgetselectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgetselectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_budgetselectionActionPerformed

    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        budgetselection.setSelectedIndex(0);
        propertyselection.setSelectedIndex(0);
        locationselection.setSelectedIndex(0);
        
        //jLabel5.setVisible(false);
        ResultTable.setModel(new DefaultTableModel());

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        //Class.forName("com.mysql.jdbc.Driver");
        
        Connection myconn = null;
        Statement mystmt = null;
        ResultSet myrs = null;
        
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mumbaihomes","root","root");
        } catch (SQLException ex) {
            Logger.getLogger(Mainform.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(budgetselection.getSelectedIndex() == 0 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            ResultTable.setVisible(false);
        }
        
        if(budgetselection.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(this, "Out of all three, Range of your Budget should be provided to search for flats/ bungalows/ plots in Mumbai.");
        }
        
        
        //when only budget is selected
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price < 5000000");
                    
                if(myrs.isBeforeFirst() == false) 
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {                    
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 5100000 AND price < 8000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 8100000 AND price < 12000000");
                
                
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 12000000 AND price < 16000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 17000000 AND price < 20000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 21000000 AND price < 24000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 25000000 AND price < 28000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 29000000 AND price < 32000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 33000000 AND price < 36000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 37000000 AND price < 40000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 41000000 AND price < 44000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 45000000 AND price < 48000000 ");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 0 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from combined where price > 48000000 AND price < 50000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        
        //when property type flat is selected with budget
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price < 5000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
            
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 5000000 AND price < 8000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 8100000 AND price < 12000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 12000000 AND price < 16000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 17000000 AND price < 20000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 21000000 AND price < 24000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 25000000 AND price < 28000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 29000000 AND price < 32000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 33000000 AND price < 36000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 37000000 AND price < 40000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 41000000 AND price < 44000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 45000000 AND price < 48000000 ");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 48000000 AND price < 50000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
 
        
        //when property type bunglow is selected with budget
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price < 5000000");
                 
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }                
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 5000000 AND price < 8000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 8100000 AND price < 12000000");
                
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }                                    
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 12000000 AND price < 16000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 17000000 AND price < 20000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 21000000 AND price < 24000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 25000000 AND price < 28000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 29000000 AND price < 32000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 33000000 AND price < 36000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 37000000 AND price < 40000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 41000000 AND price < 44000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 45000000 AND price < 48000000 ");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 48000000 AND price < 50000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        //when property type plot is selected with budget
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price < 5000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 5000000 AND price < 8000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 8100000 AND price < 12000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 12000000 AND price < 16000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 17000000 AND price < 20000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 21000000 AND price < 24000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 25000000 AND price < 28000000");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 29000000 AND price < 32000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 33000000 AND price < 36000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 37000000 AND price < 40000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 41000000 AND price < 44000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 45000000 AND price < 48000000 ");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 0)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 48000000 AND price < 50000000");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
                        
        
        //when budget property and location are selected.
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price < 5000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 5000000 and price < 8000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 8100000 AND price < 12000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 12000000 AND price < 16000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 17000000 AND price < 20000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 21000000 AND price < 24000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 25000000 AND price < 28000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 29000000 AND price < 32000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 33000000 AND price < 36000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 37000000 AND price < 40000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 41000000 AND price < 44000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 45000000 AND price < 48000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 48000000 AND price < 50000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price < 5000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 5000000 and price < 8000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 8100000 AND price < 12000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 12000000 AND price < 16000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 17000000 AND price < 20000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 21000000 AND price < 24000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 25000000 AND price < 28000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 29000000 AND price < 32000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 33000000 AND price < 36000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 37000000 AND price < 40000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 41000000 AND price < 44000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 45000000 AND price < 48000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 48000000 AND price < 50000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price < 5000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 5000000 and price < 8000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 8100000 AND price < 12000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 12000000 AND price < 16000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 17000000 AND price < 20000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 21000000 AND price < 24000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 25000000 AND price < 28000000 and location = 'mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 29000000 AND price < 32000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 33000000 AND price < 36000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 37000000 AND price < 40000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 41000000 AND price < 44000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 45000000 AND price < 48000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 1)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 48000000 AND price < 50000000 and location = 'mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }


        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price < 5000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 5000000 and price < 8000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 8100000 AND price < 12000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 12000000 AND price < 16000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 17000000 AND price < 20000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 21000000 AND price < 24000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 25000000 AND price < 28000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 29000000 AND price < 32000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 33000000 AND price < 36000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 37000000 AND price < 40000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 41000000 AND price < 44000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 45000000 AND price < 48000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 48000000 AND price < 50000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price < 5000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 5000000 and price < 8000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 8100000 AND price < 12000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 12000000 AND price < 16000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 17000000 AND price < 20000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 21000000 AND price < 24000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 25000000 AND price < 28000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 29000000 AND price < 32000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 33000000 AND price < 36000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 37000000 AND price < 40000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 41000000 AND price < 44000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 45000000 AND price < 48000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 48000000 AND price < 50000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price < 5000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 5000000 and price < 8000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 8100000 AND price < 12000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 12000000 AND price < 16000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 17000000 AND price < 20000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 21000000 AND price < 24000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 25000000 AND price < 28000000 and location = 'navi mumbai'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 29000000 AND price < 32000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 33000000 AND price < 36000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 37000000 AND price < 40000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 41000000 AND price < 44000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 45000000 AND price < 48000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 2)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 48000000 AND price < 50000000 and location = 'navi mumbai'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price < 5000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 5000000 and price < 8000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 8100000 AND price < 12000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 12000000 AND price < 16000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 17000000 AND price < 20000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 21000000 AND price < 24000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 25000000 AND price < 28000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 29000000 AND price < 32000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 33000000 AND price < 36000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 37000000 AND price < 40000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 41000000 AND price < 44000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 45000000 AND price < 48000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 48000000 AND price < 50000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price < 5000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 5000000 and price < 8000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 8100000 AND price < 12000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 12000000 AND price < 16000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 17000000 AND price < 20000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 21000000 AND price < 24000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 25000000 AND price < 28000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 29000000 AND price < 32000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 33000000 AND price < 36000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 37000000 AND price < 40000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 41000000 AND price < 44000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 45000000 AND price < 48000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 48000000 AND price < 50000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price < 5000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 5000000 and price < 8000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 8100000 AND price < 12000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 12000000 AND price < 16000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 17000000 AND price < 20000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 21000000 AND price < 24000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 25000000 AND price < 28000000 and location = 'thane'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 29000000 AND price < 32000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 33000000 AND price < 36000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 37000000 AND price < 40000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 41000000 AND price < 44000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 45000000 AND price < 48000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 3)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 48000000 AND price < 50000000 and location = 'thane'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price < 5000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 5000000 and price < 8000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 8100000 AND price < 12000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 12000000 AND price < 16000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 17000000 AND price < 20000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 21000000 AND price < 24000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 25000000 AND price < 28000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 29000000 AND price < 32000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 33000000 AND price < 36000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 37000000 AND price < 40000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 41000000 AND price < 44000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 45000000 AND price < 48000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 1 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from flat where price > 48000000 AND price < 50000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price < 5000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 5000000 and price < 8000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 8100000 AND price < 12000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 12000000 AND price < 16000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 17000000 AND price < 20000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 21000000 AND price < 24000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 25000000 AND price < 28000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 29000000 AND price < 32000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 33000000 AND price < 36000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 37000000 AND price < 40000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 41000000 AND price < 44000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 45000000 AND price < 48000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 2 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from bunglow where price > 48000000 AND price < 50000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        
        if(budgetselection.getSelectedIndex() == 1 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price < 5000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                                  
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
                
        }
        
        if(budgetselection.getSelectedIndex() == 2 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 5000000 and price < 8000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 3 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 8100000 AND price < 12000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 4 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 12000000 AND price < 16000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
        if(budgetselection.getSelectedIndex() == 5 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 17000000 AND price < 20000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                      
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        if(budgetselection.getSelectedIndex() == 6 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 21000000 AND price < 24000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 7 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4) 
        {                
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 25000000 AND price < 28000000 and location = 'south bombay'");
                    
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 8 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 29000000 AND price < 32000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 9 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 33000000 AND price < 36000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
                    
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 10 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 37000000 AND price < 40000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 11 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 41000000 AND price < 44000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 12 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)            
        {            
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 45000000 AND price < 48000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
            
        if(budgetselection.getSelectedIndex() == 13 && propertyselection.getSelectedIndex() == 3 && locationselection.getSelectedIndex() == 4)
        {
            try
            {
                mystmt = myconn.createStatement();
            
                myrs = mystmt.executeQuery("select * from plot where price > 48000000 AND price < 50000000 and location = 'south bombay'");
            
                if(myrs.isBeforeFirst() == false)
                {
                    ResultTable.setModel(new DefaultTableModel());
                    JOptionPane.showMessageDialog(this, "There are no search results to display for this specification.");
                }
                else
                {
                    ResultTable.setModel(DbUtils.resultSetToTableModel(myrs));
                }
            
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
               
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ResultTable;
    private javax.swing.JComboBox<String> budgetselection;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> locationselection;
    private javax.swing.JComboBox<String> propertyselection;
    // End of variables declaration//GEN-END:variables


}
